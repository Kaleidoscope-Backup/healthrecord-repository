
input VariantInput {
   # NCBI accession number or other such org provided number
   accessionID: String

   # Start position of the variant on the reference sequence
   start: Int

   # End position of the variant on the reference sequence
   end: Int

   # Allele that was observed
   observedAllele: String 

   # Allele in the reference sequence
   referenceAllele: String 

   # Extended CIGAR string for aligning the sequence with reference bases
   cgar: String 
}

# Variant in sequence
type Variant {
   id: String!

   # NCBI accession number or other such org provided number
   accessionID: String

   # Start position of the variant on the reference sequence
   start: Int

   # End position of the variant on the reference sequence
   end: Int

   # Allele that was observed
   observedAllele: String 

   # Allele in the reference sequence
   referenceAllele: String 

   # Extended CIGAR string for aligning the sequence with reference bases
   cgar: String 
}

input ReferenceSequenceInput {
    # The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'
    genomeBuild: String!

    # NCBI accession number or other such org provided number
    accessionID: String 

    # Start position of the window on the reference sequence
    windowStart: Int 

    # End position of the window on the reference sequence
    windowEnd: Int 

    # A string to represent reference sequence
    referenceSeqString: String     
}

# A sequence used as reference
type ReferenceSequence {
    id: String!

    # The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'
    genomeBuild: String!

    # NCBI accession number or other such org provided number
    accessionID: String 

    # Start position of the window on the reference sequence
    windowStart: Int 

    # End position of the window on the reference sequence
    windowEnd: Int 

    # A string to represent reference sequence
    referenceSeqString: String 
}

input MolecularSequenceRecordCreate {
    # From health record
    name: String!
    consumerID: String!
    description: String
    occurred: Time!
    source: String!  
    organization: String  
    sourceRecordID: SourceRecordIDInput
    references: [ReferenceHealthRecordInput!]
    location: GeoLocationInput

    # Molecular record 
    # A sequence used as reference
    referenceSeq: ReferenceSequenceInput

    # Variant in sequence
    variants: [VariantInput!]

    # Sequence that was observed
    observedSeq: String 
}

# MolecularSequence is designed to hold genetic sequences in blocks relevant to actionable clinical decision-making.
type MolecularSequenceRecord implements HealthRecord {
    # health record specific
    id: String!
    consumerID: String!
    previousRecord: String
    recordType: HealthRecordType!
    transactionType: HealthRecordTransactionType!
    name: String!
    description: String
    occurred: Time!
    source: String!    
    created: Time!
    organization: String
    sourceRecordID: SourceRecordID
    createdBy: String
    references: [ReferenceHealthRecord!]
    location: GeoLocation

    # MolecularSequence

    # A sequence used as reference
    referenceSeq: ReferenceSequence

    # Variant in sequence
    variants: [Variant!]

    # Sequence that was observed
    observedSeq: String 
}