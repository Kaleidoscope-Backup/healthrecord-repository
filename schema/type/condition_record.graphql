enum ConditionStatus {
    CONDITION_ACTIVE
    CONDITION_RECURRENCE
    CONDITION_INACTIVE
    CONDITION_REMISSION
    CONDITION_RESOLVED
 }

 input ConditionRecordCreate {
    # From health record
    name: String!
    consumerID: String!
    description: String
    occurred: Time!
    source: String!  
    organization: String  
    sourceRecordID: SourceRecordIDInput
    references: [ReferenceHealthRecordInput!]
    location: GeoLocationInput

    # condition specific
    code: CodableConceptInput
    status: ConditionStatus!
    severity: Severity
    bodySite: String
    bodySiteCode: CodableConceptInput
    stageAssesment: String
    stageAssesmentCode: CodableConceptInput 
    onset: OnsetInput
    abatement: AbatementInput 
    evidence: [SymptomInput!]
}

type ConditionRecord implements HealthRecord {

    # health record specific
    id: String!
    consumerID: String!
    previousRecord: String
    recordType: HealthRecordType!
    transactionType: HealthRecordTransactionType!
    name: String!
    description: String
    occurred: Time!
    source: String!    
    created: Time!
    organization: String
    sourceRecordID: SourceRecordID
    createdBy: String
    references: [ReferenceHealthRecord!]
    location: GeoLocation

    # condition specific
    code: CodableConcept
    status: ConditionStatus!
    severity: Severity
    bodySite: String
    bodySiteCode: CodableConcept
    stageAssesment: String
    stageAssesmentCode: CodableConcept
    onset: Onset
    abatement: Abatement 
    evidence: [Symptom!]
}